# This is a basic workflow to help you get started with Actions

name: Shanghai local runner experiment manual trigger

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  twister-run:
    # The type of runner that the job will run on
    runs-on: [self-hosted, ming-nuc01]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3
      #  with:
      #    path: $GITHUB_WORKSPACE/

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo GITHUB_WORKSPACE: $GITHUB_WORKSPACE
          echo [step 0] & date
          
      - name: Run twister
        run: |
          echo [step 1] & date
          rm -fr $GITHUB_WORKSPACE/zephyrproject
          mkdir -p $GITHUB_WORKSPACE/zephyrproject
          echo [step 2] & date
          cd $GITHUB_WORKSPACE/zephyrproject
          echo [step 3] & date
          west init -m https://github.com/zephyrproject-rtos/zephyr
          echo [step 4] & date
          west update
          echo [step 5] & date
          west zephyr-export
          echo [step 6] & date
          cd zephyr          
          source ./zephyr-env.sh
          echo [step 7] & date
          ./scripts/twister -x=CONFIG_BOOT_DELAY=500 --device-testing --device-serial /dev/ttyACM0 --device-serial-baud 115200 -p reel_board -T tests/kernel/fifo/fifo_api
          echo [done] & date
          
         
          
          
          
          
